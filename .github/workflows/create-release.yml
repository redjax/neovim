---
## Create a release after merging a PR from prepare-release.yml
name: Create Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release from Merged Release-Please PR
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Only continue if the commit message matches a release-please PR merge
      - name: Check if this is a release-please merge commit
        id: check_release
        run: |
          # Get the latest commit message
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "Commit message: $COMMIT_MSG"
          # Check for release-please pattern
          if [[ "$COMMIT_MSG" =~ ^chore\(main\):\ release\ [0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "is_release_please=true" >> $GITHUB_OUTPUT
          else
            echo "is_release_please=false" >> $GITHUB_OUTPUT
          fi

      # Stop the workflow if this isn't a release-please merge
      - name: Stop if not release-please
        if: steps.check_release.outputs.is_release_please != 'true'
        run: |
          echo "Not a release-please merge commit. Skipping release steps."
          exit 0

      # Zip each config profile
      - name: Zip config profiles
        run: |
          mkdir -p dist
          for dir in config/*/ ; do
            profile=$(basename "$dir")
            zip -r "dist/${profile}.zip" "$dir"
          done

      # Upload ZIPs as release assets to the latest release
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.zip
          # If you want to upload to the latest release, omit tag_name
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
